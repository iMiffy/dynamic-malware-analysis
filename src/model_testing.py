from tensorflow.keras.models import load_model
from datagen import DataGenerator
import argparse
import os
import pandas as pd

ap = argparse.ArgumentParser()
ap.add_argument("-d", "--dataset", required=True, help="path to testing dataset")
ap.add_argument("-c", "--csv", required=True, help="path to testing CSV file")
ap.add_argument("-m", "--model", required=True, help="path to model (.h5)")
ap.add_argument("-p", "--pred", required=True, help="path to prediction results")
args = vars(ap.parse_args())

data_test = pd.read_csv(args['csv'])
data_test["file_path"] = data_test["Id"].apply(lambda x: os.path.join(args['dataset'], str(x)+".npy"))
test_model = load_model(args['model'])

test_generator = DataGenerator(data_test['file_path'], batch_size=50, test=True, shuffle=False)
final_result = test_model.predict_generator(generator=test_generator)
compiled_result = pd.DataFrame(final_result)
compiled_result = compiled_result.rename(columns={"Unnamed: 0": "Id", '0': 'Predicted'})

if not os.path.isdir(os.path.dirname(args['pred'])):
    os.makedirs(os.path.dirname(args['pred']))

compiled_result.to_csv(args['pred'])
