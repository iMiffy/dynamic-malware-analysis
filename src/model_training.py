from sklearn.model_selection import train_test_split
from datagen import DataGenerator
from model import MalwareModel
import pandas as pd
import argparse
import os

ap = argparse.ArgumentParser()
ap.add_argument("-d", "--dataset", required=True, help="path to training dataset")
ap.add_argument("-c", "--csv", required=True, help="path to training CSV file")
ap.add_argument("-m", "--model", required=True, help="path to output model (.h5)")
args = vars(ap.parse_args())

data_train = pd.read_csv(args['csv'])
data_train["file_path"] = data_train["Id"].apply(lambda x: os.path.join(args['dataset'], str(x)+".npy"))


X_train, X_val, y_train, y_val = train_test_split(data_train["file_path"],
                                                    data_train["Label"],
                                                    stratify=data_train["Label"],
                                                    test_size=0.2, random_state=42)
training_generator = DataGenerator(X_train, batch_size=50,shuffle=True)
validation_generator = DataGenerator(X_val)

model = MalwareModel()
model = model.create()
print(model.summary())

model.fit_generator(generator=training_generator,
                    validation_data=validation_generator, epochs=15)

if not os.path.isdir(os.path.dirname(args['model'])):
    os.makedirs(os.path.dirname(args['model']))

model.save(args['model'])
